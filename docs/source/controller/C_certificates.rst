Certificates
============

The certificate chain of Guardian is 

::
   
   S15 Root CA
   |
   +--S15 QKD intermediate CA
      |
      +--KME operator intermediate CA (kme)
         |
         +--Internal Intermediate CA (generated by ``cert_auth``)
         |  |
         |  +-- Vault server certificate
         |  +-- Vault client certificate (``vault_init``)
         |
         +--Vault PKI engine Intermediate CA 
            |
            +-- Service client certificates, ``rest``, ``watcher``
            +-- SAE client certificates
 

In order to verify an identity through TLS mutual authentication, both server and client present their certificates with or without their CA chain. They will then verify the others certificates with their trusted CA chains to determine the authenticity of the certificates before deciding to continue with the connection.


Additional Clients
------------------

To add additional individual SAE clients, they will need to present their Certificate Signing Request to be signed by the Vault PKI engine Intermediate CA. The mandatory identifiers are 

   #. Country
   
   #. State

   #. Locality
   
   #. Organisation Unit
   
   #. Common Name
   
Optional identifiers are
   
   #. Blah
   
   #. Blah
   
Also, the keys used to generate the CSR needs to be secure enough.

----

Certificate Signing
-------------------

With the client CSR, the |QKDdc| can generate a certificate using the intermediate CA certificate issuer role enabled on the PKI secrets engine. This can be done via the vault web browser, or through a hvac client.

.. figure:: ./images/vault_username_login.png
   :alt: Vault login screen with username login method

.. figure:: ./images/vault_secrets_controller.png
   :alt: PKI secrets engine for issuing/signing certificates
   
.. figure:: ./images/vault_cert_roles.png
   :alt: Intermediate CA role

.. figure:: ./images/vault_csr1.png
   :alt: Certificate signing request with options

.. figure:: ./images/vault_cert_signed.png
   :alt: Certificate signed with CA chain


.. |QKDdc| replace:: QKD device controller